{"version":3,"sources":["fonts/oswald-v36-latin-300.woff","fonts/oswald-v36-latin-regular.woff","fonts/oswald-v36-latin-600.woff","fonts/noto-sans-kr-v13-latin-regular.woff","fonts/Font.js","routes/Auth.js","components/Post.js","components/List.js","components/Pagination.js","components/Create.js","components/Header.js","routes/Home.js","components/Router.js","components/App.js","index.js"],"names":["createGlobalStyle","OswaldLight","OswaldRegular","OswaldSemiBold","NotoSans","FormWrap","styled","div","Auth","useState","email","password","inputs","setInputs","typeErr","setTypeErr","onChange","useCallback","e","target","name","value","prev","onEmailBlur","test","onSubmit","preventDefault","localStorage","setItem","alert","type","required","placeholder","onBlur","React","memo","PostBlock","li","Post","postId","postTitle","onDelete","onUpdate","update","setUpdate","newTitle","setNewTitle","edit","setEdit","onToggle","console","log","className","onClick","src","alt","List","data","map","post","id","title","uuidv4","PaginationBlock","Pagination","postsToView","totalPosts","paginate","pageNums","SetpageNums","start","end","currentBtn","setCurrentBtn","prevNextBtn","lastPage","Math","ceil","useEffect","numArray","i","push","setPagination","num","CreateForm","form","Create","onCreate","setTitle","titleInput","useRef","ref","Gnb","header","Header","props","confirm","window","removeItem","location","reload","MainHome","Home","setData","currentPg","setCurrentPg","a","axios","get","response","rawData","reverse","Error","fetchData","text","newData","userid","length","viewData","lastIndex","firstIndex","slice","getPosts","filter","el","postData","index","findIndex","obj","AppRouter","userIn","setUserIn","getItem","exact","path","GlobalStyle","App","Font","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e421dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/oswald-v36-latin-300.6397ef09.woff\";","export default __webpack_public_path__ + \"static/media/oswald-v36-latin-regular.3d1d485b.woff\";","export default __webpack_public_path__ + \"static/media/oswald-v36-latin-600.98b7df2b.woff\";","export default __webpack_public_path__ + \"static/media/noto-sans-kr-v13-latin-regular.68b6dc32.woff\";","import { createGlobalStyle } from \"styled-components\";\r\nimport OswaldLight from \"./oswald-v36-latin-300.woff\";\r\nimport OswaldRegular from \"./oswald-v36-latin-regular.woff\";\r\nimport OswaldSemiBold from \"./oswald-v36-latin-600.woff\";\r\nimport NotoSans from \"./noto-sans-kr-v13-latin-regular.woff\";\r\n\r\nexport default createGlobalStyle`\r\n    @font-face {\r\n        font-family: \"Oswald\";\r\n        src: local(\"Oswald\"),\r\n        url(${OswaldLight}) format('woff');\r\n        font-weight: 300;\r\n        font-style: normal;\r\n    }\r\n    @font-face {\r\n        font-family: \"Oswald\";\r\n        src: local(\"Oswald\"),\r\n        url(${OswaldRegular}) format('woff');\r\n        font-weight: 400;\r\n        font-style: normal;\r\n    }\r\n    @font-face {\r\n        font-family: \"Oswald\";\r\n        src: local(\"Oswald\"),\r\n        url(${OswaldSemiBold}) format('woff');\r\n        font-weight: 600;\r\n        font-style: normal;\r\n    }\r\n\r\n    @font-face {\r\n        font-family: \"NotoSans\";\r\n        src: local(\"NotoSans\"),\r\n        url(${NotoSans}) format('woff');\r\n        font-weight: 400;\r\n        font-style: normal;\r\n    }\r\n`;","import React, { useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FormWrap = styled.div`\r\n    display: flex; flex-direction:column; text-align:center;\r\n    position: absolute; top:50%; left:50%; transform:translate(-50%, -50%);\r\n    h1 { margin-bottom:1rem; border-bottom:1px solid #FF9E9E; font-size:3.5rem; color:#666; line-height:7rem; font-weight:600; }\r\n    form{ display:flex; flex-direction:column; align-items: center;\r\n        > * { margin-bottom 1rem; height:3rem; width:380px; }\r\n        input{ padding:0 0.5rem; border:1px solid #ededed; }\r\n        button{ margin-bottom:0; background-color:#FF9E9E; border:none; border-radius:0.5rem; }\r\n        span{ height:1.25rem; line-height:1.25rem; font-size:0.975rem; color:#A50000; }\r\n    }\r\n`;\r\n\r\nfunction Auth(){\r\n    const [inputs, setInputs] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const {email, password} = inputs;\r\n    const [typeErr, setTypeErr] = useState(false);\r\n\r\n    const onChange = useCallback(e => {\r\n        const {name, value} = e.target;\r\n\r\n        setInputs(prev => ({...prev, [name]:value}));\r\n    }, [])\r\n\r\n    const onEmailBlur = useCallback(() => {\r\n        let regxep = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n        if(!regxep.test(email)){\r\n            setTypeErr(true);\r\n        }else{\r\n            setTypeErr(false);\r\n        }\r\n    }, [email])\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(email !== ''){\r\n            if(password !== ''){\r\n                let token = '1welcomeToAlbumNavigator1'\r\n                localStorage.setItem('token', token);\r\n            }else{\r\n                alert('Please enter your password!');\r\n            }\r\n        }else{\r\n            alert('Please enter your email address!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormWrap>\r\n        <h1>Album Navigator</h1>\r\n        <form onSubmit={onSubmit}>\r\n            <input type=\"email\" required name=\"email\" placeholder=\"Email\" onChange={onChange} onBlur={onEmailBlur} />\r\n            {typeErr&&<span>Please enter a valid email address.</span>}\r\n            <input type=\"password\" required name=\"password\" placeholder=\"Password\" onChange={onChange} />\r\n            <button type=\"submit\">Sign In</button>\r\n        </form>\r\n    </FormWrap>\r\n    );\r\n}\r\n\r\nexport default React.memo(Auth);","import React, { useCallback, useState } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst PostBlock = styled.li`\r\n    position: relative; \r\n    padding:2.5rem 0; border-bottom:1px solid #FF9E9E;\r\n    .editBox { position:absolute; top:2.5rem; right:0; width:4rem;\r\n        > button { float:right; margin-bottom:0.5rem; border:none; background-color:transparent; color:#FF9E9E; font-size:0.875rem; }\r\n        > div{ float:right; display:flex; flex-direction:column; background-color:#FF9E9E;\r\n            button{ padding:1rem; border:none; background-color:transparent; color:#fff; font-weight:400; }\r\n        }\r\n    }\r\n    h4{ width:100%; margin-bottom:1.25rem; text-align:center; font-size:2rem; font-weight:300; }\r\n    img{ margin:0 auto; }\r\n\r\n    form{ text-align:center;  \r\n        fieldset{ margin-bottom:1rem; > * { height:3rem; }\r\n            input{ width:40%; margin-right:1rem; padding:0 0.5rem ; border:1px solid #ededed; }\r\n            button{ width:15%; background-color:#FF9E9E; border:none; border-radius:0.5rem; color:#fff; }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction Post({postId, postTitle, onDelete, onUpdate}) {\r\n    const [update, setUpdate] = useState(false);\r\n    const [newTitle, setNewTitle] = useState(postTitle);\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const onToggle = e => {\r\n        const {name} = e.target;\r\n        console.log(name);\r\n        if(name === \"edit\"){\r\n            setEdit(prev => !prev);\r\n        }else{\r\n            setUpdate(prev => !prev);\r\n        }\r\n    }\r\n    \r\n    const onChange = useCallback(e => {\r\n        const {value} = e.target;\r\n        setNewTitle(value);\r\n    }, []);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(newTitle !== ''){\r\n            onUpdate(newTitle, postId);\r\n            setUpdate(false);\r\n            setEdit(false);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <PostBlock>\r\n            <div className=\"editBox\">\r\n                <button type=\"button\" name=\"edit\" onClick={onToggle}>● ● ●</button>\r\n                {edit&&\r\n                    <div>\r\n                        <button type=\"button\" name=\"update\" onClick={onToggle}>Update</button>\r\n                        <button type=\"button\" onClick={()=>{onDelete(postId)}} >Delete</button>\r\n                    </div>}\r\n            </div>\r\n            {update?\r\n                <form onSubmit={onSubmit}>\r\n                    <fieldset>\r\n                        <input type=\"text\" value={newTitle} onChange={onChange}/>\r\n                        <button type=\"submit\">Update!</button>\r\n                    </fieldset>\r\n                    <img src=\"https://via.placeholder.com/580x400.png?text=Demo\" alt=\"demo\" />\r\n                </form>:\r\n                <div>\r\n                    <h4>{postTitle}</h4>\r\n                    <img src=\"https://via.placeholder.com/580x400.png?text=Demo\" alt=\"demo\" />\r\n                </div>\r\n            }\r\n            \r\n        </PostBlock>\r\n    );\r\n}\r\n\r\nexport default React.memo(Post);","import React from 'react';\r\nimport Post from './Post';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction List({data, onDelete, onUpdate}) {\r\n    \r\n    return <div>\r\n        <ul>\r\n            {data.map(post => <Post key={uuidv4()} postId={post.id} postTitle={post.title} onDelete={onDelete} onUpdate={onUpdate} />)}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default React.memo(List);","import React, { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from 'styled-components';\r\n\r\nconst PaginationBlock = styled.div`\r\n    * { color:#FF9E9E; font-weight:bold; font-size:1.5rem; }\r\n    display:flex; justify-content:center; padding:2rem;\r\n    ul{ position:relative; top:3px; display:flex; \r\n        li{ width:2.5rem; height:2.5rem; \r\n            button { width:100%; height:100%; border:none; background-color:transparent;  }\r\n        }\r\n    }\r\n    button { width:2.5rem; height:2.5rem; border:none; background-color:transparent;  }\r\n    \r\n`;\r\n\r\nfunction Pagination({postsToView, totalPosts, paginate}) {\r\n\r\n    const [pageNums, SetpageNums] = useState([]);\r\n    const [currentBtn, setCurrentBtn] = useState({\r\n        start: 1,\r\n        end: 5\r\n    });\r\n    \r\n    const prevNextBtn = e => {\r\n        const {name} = e.target;\r\n        const {start, end} = currentBtn;\r\n        const lastPage = Math.ceil(totalPosts/postsToView);\r\n        if(name === \"next\"){\r\n            if(end < lastPage){\r\n                setCurrentBtn(prev=> ({start: prev.start++, end: prev.end++}))\r\n            }\r\n        }else{\r\n            if(start > 1){\r\n                setCurrentBtn(prev=> ({start: prev.start--, end: prev.end--}))\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const setPagination = () => {\r\n            const {start, end} = currentBtn;\r\n            let numArray = [];\r\n            for(let i = start; i<=end;i++){\r\n                numArray.push(i);\r\n            }\r\n            SetpageNums(numArray);\r\n        }\r\n\r\n        setPagination();\r\n    }, [totalPosts, postsToView, currentBtn]);\r\n\r\n    return (\r\n        <PaginationBlock>\r\n            <button type=\"button\" name=\"prev\" onClick={prevNextBtn}>◀</button>\r\n            <ul>\r\n                {pageNums.map(num => <li key={uuidv4()}><button onClick={()=>{paginate(num)}}>{num}</button></li>)}\r\n            </ul>\r\n            <button type=\"button\" name=\"next\" onClick={prevNextBtn}>▶</button>\r\n        </PaginationBlock>\r\n    );\r\n}\r\n\r\nexport default React.memo(Pagination);","import React, { useCallback, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CreateForm = styled.form`\r\n    display:flex; justify-content:center; align-items: center; border-bottom:1px solid #FF9E9E;\r\n    margin-bottom:1rem; padding:2rem 0;\r\n    > * { height:3rem; }\r\n    input{ width:50%; margin-right:1rem; padding:0 0.5rem ; border:1px solid #ededed; }\r\n    button{ width:15%; background-color:#FF9E9E; border:none; border-radius:0.5rem; color:#fff; font-weight:400; }\r\n`;\r\n\r\nfunction Create({onCreate}) {\r\n    const [title, setTitle] = useState('');\r\n    const titleInput = useRef();\r\n\r\n    const onChange = useCallback(e => {\r\n        const {value} = e.target;\r\n        setTitle(value);\r\n    }, []);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(title){\r\n            onCreate(title);\r\n            setTitle('');\r\n        }\r\n    }\r\n\r\n    return <CreateForm onSubmit={onSubmit}>\r\n        <input type=\"text\" value={title} required placeholder=\"Title...\" ref={titleInput} onChange={onChange}/>\r\n        <button type=\"submit\">Share</button>\r\n    </CreateForm>\r\n}\r\n\r\nexport default React.memo(Create);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Gnb = styled.header`\r\n    position:fixed; top:0; left:0; z-index:1000;\r\n    width:100%; height:5rem; \r\n    background-color:#FFEEEE; border-bottom:1px solid #FF9E9E;\r\n    .wrap{ position:relative; \r\n        h1{ line-height:5rem; text-align:center; color:#666; font-size:2.5rem; font-weight:600; }\r\n        button{ \r\n            position:absolute; top:0; right:0; height:5rem; \r\n            border:none; background-color:transparent; \r\n            font-size:1.25rem; font-weight:600; color:#FF9E9E; \r\n        }\r\n    }\r\n`;\r\n\r\nfunction Header(props) {\r\n    const onLogOut = () => {\r\n        const confirm = window.confirm('Do you really want to leave Albul Navigator?');\r\n        console.log(confirm);\r\n        if(confirm){\r\n            localStorage.removeItem('token');\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Gnb>\r\n            <div className=\"wrap\">\r\n                <h1>Album Navigator</h1>\r\n                <button type=\"button\" onClick={onLogOut}>Log Out ⇒</button>\r\n            </div>\r\n        </Gnb>\r\n    );\r\n}\r\n\r\nexport default React.memo(Header);","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport List from '../components/List';\r\nimport Pagination from '../components/Pagination';\r\nimport Create from '../components/Create';\r\nimport Header from '../components/Header';\r\n\r\nconst MainHome = styled.div`\r\n    padding-top:5rem;\r\n`;\r\n\r\nfunction Home(props) {\r\n    const [data, setData] = useState([]);\r\n    const [currentPg, setCurrentPg] = useState(1);\r\n    const newUser = 11;\r\n    const postsToView = 5;\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            let dataUrl = \"https://jsonplaceholder.typicode.com/albums\";\r\n            try{\r\n                const response = await axios.get(dataUrl);\r\n                let rawData = response.data;\r\n                setData(rawData.reverse());\r\n            }catch (e){\r\n                throw Error(e);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const getPosts = viewData => {\r\n        const lastIndex = currentPg * postsToView;\r\n        const firstIndex = lastIndex - postsToView;\r\n        \r\n        let currentPost = viewData.slice(firstIndex, lastIndex);\r\n        return currentPost;\r\n    }\r\n\r\n    const onUpdate = (postData, postId) => {\r\n        let index = data.findIndex(obj => obj.id === postId);\r\n        setData(prev => [...prev, data[index].title = postData]);\r\n    }\r\n\r\n    const onCreate = text => {\r\n        const {id} = data[data.length -1]\r\n        const newData = {\r\n            userid: newUser,\r\n            id: id + 1,\r\n            title: text\r\n        }\r\n        setData(prev => [newData, ...prev]);\r\n    }\r\n\r\n    const onDelete = postId => {\r\n        setData(prev => prev.filter(el => el.id !== postId));\r\n    }\r\n\r\n    return <MainHome>   \r\n        <Header />\r\n        <Create onCreate={onCreate} />\r\n        <List data={getPosts(data)} onDelete={onDelete} onCreate={onCreate} onUpdate={onUpdate} />\r\n        <Pagination postsToView={postsToView} totalPosts={data.length} paginate={setCurrentPg} />\r\n    </MainHome>\r\n}\r\n\r\nexport default React.memo(Home);","import React, { useEffect, useState } from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\n\r\nfunction AppRouter() {\r\n    const [userIn, setUserIn] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem('token')){\r\n            setUserIn(true);\r\n        }else{\r\n            setUserIn(false);\r\n        }\r\n    }, []);\r\n    return <Router>\r\n        <Switch>\r\n            {userIn?\r\n                <Route exact path=\"/\">\r\n                    <Home />\r\n                </Route>:\r\n                <Route exact path=\"/\"> \r\n                    <Auth />\r\n                </Route>\r\n            }\r\n        </Switch>\r\n    </Router>\r\n}\r\n\r\nexport default React.memo(AppRouter);","import React from 'react';\nimport { createGlobalStyle } from 'styled-components'\nimport Font from '../fonts/Font';\nimport AppRouter from './Router';\n\nconst GlobalStyle = createGlobalStyle`\n  *{ padding:0; margin:0; box-sizing:border-box; font-family: 'Oswald', 'NotoSans', 'Malgun Gothic', sans serif; font-weight:300; }\n  body{ background-color:#FFEEEE; }\n  li{ list-style:none; }\n  img{ display:block; }\n  fieldset{ border:none; }\n  button{ cursor:pointer; }\n  .wrap{ width:1180px; max-width:1180px; margin:0 auto; }\n  :root {\n    *{ font-size: 18px; }\n    @media screen and (max-width: 1024px) {\n      *{ font-size: 18px; }\n    }\n    @media screen and (max-width: 376px) {\n      *{ font-size: 16px; }\n    }\n  }\n`;\n\nfunction App() {\n  return <div className=\"wrap\">\n    <Font />\n    <GlobalStyle />\n    <AppRouter />\n  </div>\n}\n\nexport default React.memo(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}